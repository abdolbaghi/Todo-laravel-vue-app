version: '3'

networks:
  laravel:

services:
    app:
        build:
            context: ./Docker
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        ports:
            - "8000:80"
            - "5000:443"
        volumes:
            - "./Docker/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./Docker/etc/ssl:/etc/ssl"
            - "./Docker/log/nginx:/var/log/nginx"
            - ./src:/var/www/html:delegated
            # - "./Docker/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        depends_on:
        - php
        - redis
        - mysql
        - mailhog
        networks:
        - laravel
    mysql:
        image: mariadb:10.6
        restart: unless-stopped
        tty: true
        ports:
            - "8989:3306"
        volumes:
            - "./Docker/data/db/mysql:/var/lib/mysql"
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel
    myadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=mysql
        restart: always
        depends_on:
            - mysql
    php:
        build:
            context: ./Docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        ports:
        - "9000:9000"
        volumes:
            - "./Docker/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./src:/var/www/html"
            - "./Docker/log/crontab:/var/log/crontab"
        # ports:
        #     - "5173:5173"
        networks:
            - laravel

    redis:
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - laravel

    composer:
        build:
            context: ./Docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        networks:
            - laravel

    npm:
        image: node:18-alpine3.18
        volumes:
            - ./src:/var/www/html
        ports:
            - "3000:3000"
            - "3001:3001"
            - "5173:5173"
        working_dir: /var/www/html
        entrypoint: [ 'npm','run','build' ]
        tty: true
        networks:
            - laravel

    artisan:
        build:
            context: ./Docker
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./src:/var/www/html:delegated
        depends_on:
            - mysql
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel

    mailhog:
        image: mailhog/mailhog:latest
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - laravel
    # web:
    #     image: nginx:alpine
    #     volumes:
    #         - "./Docker/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
    #         - "./Docker/etc/ssl:/etc/ssl"
    #         - "./src:/var/www/html"
    #         - "./Docker/log/nginx:/var/log/nginx"

    #     ports:
    #         - "8000:80"
    #         - "3000:443"
    #     environment:
    #         - NGINX_HOST=${NGINX_HOST}
    #     command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    #     restart: always
    #     depends_on:
    #         - php
    #         - mysqldb
    # php:
    #     # image: nanoninja/php-fpm:${PHP_VERSION}
    #     build: ./Docker/
    #     container_name: "php"
    #     restart: always
    #     volumes:
    #         - "./Docker/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
    #         - "./src:/var/www/html"
    #         - "./Docker/log/crontab:/var/log/crontab"
    #     ports:
    #         - "5173:5173"
    # composer:
    #     image: "composer"
    #     volumes:
    #         - "./src:/app"
    #     command: install
    # myadmin:
    #     image: phpmyadmin/phpmyadmin
    #     container_name: todo_phpmyadmin
    #     ports:
    #         - "8080:80"
    #     environment:
    #         - PMA_ARBITRARY=1
    #         - PMA_HOST=${MYSQL_HOST}
    #     restart: always
    #     depends_on:
    #         - mysqldb
    # mysqldb:
    #     image: mysql:${MYSQL_VERSION}
    #     container_name: ${MYSQL_HOST}
    #     restart: always
    #     env_file:
    #         - ".env"
    #     environment:
    #         - MYSQL_DATABASE=${MYSQL_DATABASE}
    #         - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    #         - MYSQL_USER=${MYSQL_USER}
    #         - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    #     ports:
    #         - "8989:3306"
    #     volumes:
    #         - "./Docker/data/db/mysql:/var/lib/mysql"